/*
 * The Helcim API
 * This API covers publicly accessible merchant actions
 *
 * The version of the OpenAPI document: 2.0.0
 * 
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.api;

import com.konfigthis.client.ApiException;
import com.konfigthis.client.ApiClient;
import com.konfigthis.client.ApiException;
import com.konfigthis.client.Configuration;
import com.konfigthis.client.model.FailedPaymentResponse;
import com.konfigthis.client.model.SuccessfulPaymentResponse;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.BeforeAll;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for CardTransactionApi
 */
@Disabled
public class CardTransactionApiTest {

    private static CardTransactionApi api;

    
    @BeforeAll
    public static void beforeClass() {
        ApiClient apiClient = Configuration.getDefaultApiClient();
        api = new CardTransactionApi(apiClient);
    }

    /**
     * Collects up to 1000 Card Transactions
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void collectTransactionsTest() throws ApiException {
        String dateFrom = null;
        String dateTo = null;
        String search = null;
        String customerCode = null;
        String invoiceNumber = null;
        String cardToken = null;
        Integer cardBatchId = null;
        List<SuccessfulPaymentResponse> response = api.collectTransactions()
                .dateFrom(dateFrom)
                .dateTo(dateTo)
                .search(search)
                .customerCode(customerCode)
                .invoiceNumber(invoiceNumber)
                .cardToken(cardToken)
                .cardBatchId(cardBatchId)
                .execute();
        // TODO: test validations
    }

    /**
     * Get Card Transaction by id
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getByIdTest() throws ApiException {
        Integer cardTransactionId = null;
        SuccessfulPaymentResponse response = api.getById(cardTransactionId)
                .execute();
        // TODO: test validations
    }

}
